<?xml version="1.0" encoding="UTF-8"?>
<mal:specification xmlns:com="http://www.ccsds.org/schema/COMSchema"
                   xmlns:svg="http://www.w3.org/2000/svg"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:mal="http://www.ccsds.org/schema/ServiceSchema">
  <mal:area name="Common" number="3" version="1"
            comment="This section details the Common Services; the structures used by the services are detailed in section 4. The services and structures are defined in terms of the MO Message Abstraction Layer (MAL) which is defined in reference [2], so it is possible to deploy them over any supported protocol and message transport.&#xA;The services defined here are also specified in terms of the COM which is defined in reference [3]. &#xA;To aid comprehension several tables are included for each service and operation definition. The table formats are the same as those used for the specification of the MO COM Services in reference [3]. The formats are fully described in reference [2] in section 2 and in reference [3] section 2, for COM usage.&#xA;All service specifications in this document are part of the Common Area. This has a short form number of '3'.">
    <mal:service xsi:type="com:ExtendedServiceType" name="Directory" number="1"
                 comment="The Directory service allows service providers to publish information about which services they provide and consumers to discover service provider address and capability information.&#xA;Service provider information is made available using the Directory service publishService operation and removed using the withdrawService operation.&#xA;The lookupService operation provides the ability for consumers to query the directory service based on a filter such as required service capability.&#xA;Finally, a provider may supply its set of service XML files when publishing its capabilities so that consumers can obtain these during if required.">
      <mal:documentation name="High Level Requirements" order="1">The directory service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for requesting service provider details based on a filter;&lt;/li&gt;
 &lt;li&gt;the capability for publishing new service provider details;&lt;/li&gt;
 &lt;li&gt;the capability for withdrawing service provider details;&lt;/li&gt;
 &lt;li&gt;the capability to request any supplied service XML for a service provider.&lt;/li&gt;
&lt;/ol&gt;</mal:documentation>
      <mal:documentation name="Functional Requirements" order="2">A service provider shall use the publishProvider operation to make available the set of services and the capabilities of those services that it offers.
The publish operation shall take a list of one or more set of address information sets which defines one way to contact that service provider.
It shall be possible for a provider to offer multiple service addresses to allows the provider to support multiple message transports and encodings.
Each service address shall list the supported QoS levels and associated QoS properties available for that connection.
A service consumer indicates its required QoS level and priority by using these values in the lookupProvider operation.
For services that have operations based on the publish and subscribe interaction pattern there may be required a separate URI for the broker component. To support this the directory service shall hold two URIs for each service, the URI of the primary interface and also a secondary one which, if present, is used for publish and subscribe-based operations.
If a broker component is shared between more than one provider, known as a shared broker, the broker shall be published as a directory service entry without a primary interface URI.
Providers that wish to use the shared broker shall reference it by using its object instance identifier in the 'brokerProviderObjInstId' field in their directory service entry.</mal:documentation>
      <mal:capabilitySet number="1">
        <mal:requestIP name="lookupProvider" number="1" supportInReplay="true"
                       comment="The lookup operation allows a service consumer to query the directory service to return a list of service providers that match the requested criteria. If no match is found, then an empty list is returned.">
          <mal:messages>
            <mal:request>
              <mal:field name="filter"
                         comment="The filter field shall include the service details of the query.&#xA;If the serviceProviderName field is the wildcard '*' then all service provider names shall be matched.&#xA;If the final identifier of the domain field of the filter is the wildcard '*', then all sub-domains shall be searched for matches.&#xA;If the wildcard is used in any other part of the domain other than the final one then an INVALID error shall be returned.&#xA;If the domain field only contains the wildcard '*' then all domains shall be matched.&#xA;If the network field is the wildcard '*' then all networks shall be matched.&#xA;If the sessionType field is NULL then all session types shall be matched.&#xA;If the sessionName field is the wildcard '*' then all session names shall be matched.&#xA;If the area field is the wildcard '0' then all areas names shall be matched.&#xA;If the service field is the wildcard '0' then all services shall be matched.&#xA;If the version field is the wildcard '0' then all area versions shall be matched.&#xA;If the requiredCapabilities field is an empty list then all service capability sets shall be matched.">
                <mal:type name="ServiceFilter" service="Directory" area="Common"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="matchingProviders"
                         comment="The operation shall return a list of service providers that match the filter.">
                <mal:type list="true" name="ProviderSummary" service="Directory" area="Common"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Invalid filter value.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="publishProvider" number="2" supportInReplay="false"
                       comment="The publishProvider operation adds a new, or updates an existing, entry in the list of service providers held in the directory service.">
          <mal:messages>
            <mal:request>
              <mal:field name="newProviderDetails"
                         comment="The newProviderDetails field shall hold the provider details of the service to added or updated in the directory service.&#xA;If any of the fields of the newProviderDetails domain/sessionType/SessionName/network fields are either empty or contain the wildcard '*' an INVALID error shall be returned.&#xA;If the serviceProviderName field of the ProviderDetails structure is empty or contains the wildcard '*' an INVALID error shall be returned.&#xA;If the area/service/version fields of the ProviderDetails structure contain '0' or the supportedCapabilities list is empty or contains '0' then an INVALID error shall be returned.&#xA;For each contained ProviderAddressDetails structure if the supportedLevels list is empty or the priorityLevels field is '0' then an INVALID error shall be returned.&#xA;If an error is being returned then no changes shall be made.">
                <mal:type name="PublishDetails" service="Directory" area="Common"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="providerObjId"
                         comment="If the serviceProviderName field of the ProviderDetails structure matches an existing ServiceProvider COM object, that the operation shall be considered to be updating the existing details of that provider.&#xA;If the serviceProviderName field of the ProviderDetails structure does not matche an existing ServiceProvider COM object, then the operation shall create a new ServiceProvider COM object to represent the new service provider.&#xA;A new ProviderCapabilities COM object shall be created to store the capabilities of the provider.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;The operation shall return the COM object instance identifiers of the ServiceProvider and ProviderCapabilities COM objects representing the provider.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="capabilitiesObjId">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Submitted values are invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="withdrawProvider" number="3" supportInReplay="false"
                      comment="The withdrawProvider operation removes an existing entry from the list of service providers held in the directory service. If no match is found for the withdraw request, then nothing is changed.">
          <mal:messages>
            <mal:submit>
              <mal:field name="providerObjId"
                         comment="The providerObjId field shall hold the object instance identifier for the ServiceProvider COM object to remove from the directory service.&#xA;If the supplied identifier is '0' an INVALID error shall be returned.&#xA;If the supplied identifier does not match an existing ServiceProvider COM object then an UNKNOWN error shall be returned.&#xA;If an error is being returned then no changes shall be made.&#xA;The matched provider shall be removed from the directory service.&#xA;The service provider should delete the matched object from the COM archive.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Provider to withdraw was not found.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted values are invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:requestIP name="getServiceXML" number="4" supportInReplay="false"
                       comment="The getServiceXML operation returns the list of XML files that were submitted by the service provider by the publishProvider operation.&#xA;If no files were supplied then this operation returns an empty list.">
          <mal:messages>
            <mal:request>
              <mal:field name="providerObjId"
                         comment="The providerObjId field shall hold the COM object instance indentifier for the ServiceProvider to obtain the service XML for.&#xA;If the supplied instance identifier is '0' an INVALID error shall be returned.&#xA;If the supplied identifier does not match an existing ServiceProvider COM object then an UNKNOWN error shall be returned.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="xmlFiles"
                         comment="The list of XML files supplied during the publishProvider operation for the matched provider shall be returned.&#xA;If no XML files were supplied by the provider then an empty list shall be returned.">
                <mal:type list="true" name="File" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Submitted values are invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Provider was not found.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="ProviderDetails" shortFormPart="1"
                       comment="The ProviderDetails structure holds information about a provider of a service and its capabilities. The structure contains a list of AddressDetails structures which should be used when the individual services listed by the provider do not supply address information. A provider may support more than one transport technology and therefore can be reached using more than one address.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="serviceCapabilities" canBeNull="false"
                     comment="The service capabilities supported by this service provider">
            <mal:type list="true" name="ServiceCapability" service="Directory" area="Common"/>
          </mal:field>
          <mal:field name="providerAddresses" canBeNull="false"
                     comment="List of address for all services of this service provider unless service specific addresses are supplied in the serviceCapabilities field. If all address information is supplied in the serviceCapabilities field this list should be zero length.">
            <mal:type list="true" name="AddressDetails" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceCapability" shortFormPart="2"
                       comment="The ServiceCapability structure holds information about a service and the capabilities offered by a provider.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="serviceKey" canBeNull="false"
                     comment="The area, service, and version fields.">
            <mal:type name="ServiceKey" area="Common"/>
          </mal:field>
          <mal:field name="supportedCapabilities"
                     comment="The set of capabilities set numbers that this service provider supports. If NULL then all capabilities supported.">
            <mal:type list="true" name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="serviceProperties" canBeNull="false"
                     comment="Allows the passing of deployment specific service properties.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
          <mal:field name="serviceAddresses"
                     comment="Optional set of address details for this specific service which shall be used instead of the provider ones when accessing this service. If all address information is supplied in the containing ProviderDetails structure field this list should be replaced with a NULL.">
            <mal:type list="true" name="AddressDetails" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="AddressDetails" shortFormPart="4"
                       comment="The AddressDetails structure holds all information required by the Directory service about a service providers URI and attributes relating to QoS.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="supportedLevels" canBeNull="false"
                     comment="The set of possible QoS levels this service can provide.">
            <mal:type list="true" name="QoSLevel" area="MAL"/>
          </mal:field>
          <mal:field name="QoSproperties" canBeNull="false"
                     comment="Any QoS properties relevant to this address URIs and the specified transport.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
          <mal:field name="priorityLevels" canBeNull="false"
                     comment="The number of QoS priority levels that this provider supports.">
            <mal:type name="UInteger" area="MAL"/>
          </mal:field>
          <mal:field name="serviceURI"
                     comment="The Service URI that identifies the physical location of this service. NULL if represents a shared data provider (Broker).">
            <mal:type name="URI" area="MAL"/>
          </mal:field>
          <mal:field name="brokerURI"
                     comment="The broker URI that identifies the physical location of the publish and subscribe interface. NULL if service does not use publish and subscribe operations or if a shared broker is to be used.">
            <mal:type name="URI" area="MAL"/>
          </mal:field>
          <mal:field name="brokerProviderObjInstId"
                     comment="The object instance identifier of a ServiceProvider COM object that is the shared broker used by this provider.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ProviderSummary" shortFormPart="5"
                       comment="The ProviderSummary structure holds information about a provider of a service and its capabilities.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="providerKey" canBeNull="false"
                     comment="The COM object key of this service provider">
            <mal:type name="ObjectKey" area="COM"/>
          </mal:field>
          <mal:field name="providerName" canBeNull="false"
                     comment="The name of this service provider.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="providerDetails" canBeNull="false"
                     comment="The service capabilities supported by this provider">
            <mal:type name="ProviderDetails" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="PublishDetails" shortFormPart="6"
                       comment="The PublishDetails structure holds all the required information to publish new service provider details.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="providerName" canBeNull="false"
                     comment="The unique service provider name; allows multiple service providers of the same service type to coexist in the directory service.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="domain" canBeNull="false" comment="The domain of the provider.">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="sessionType" canBeNull="false"
                     comment="The type of session of the provider.">
            <mal:type name="SessionType" area="MAL"/>
          </mal:field>
          <mal:field name="sourceSessionName"
                     comment="If this is part of a replay session, this field holds the session name of the source session. NULL otherwise">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="network" canBeNull="false" comment="The network of the provider.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="providerDetails" canBeNull="false"
                     comment="The new service provider details.">
            <mal:type name="ProviderDetails" service="Directory" area="Common"/>
          </mal:field>
          <mal:field name="serviceXML"
                     comment="The optional XML files to associate with this provider.">
            <mal:type list="true" name="File" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceFilter" shortFormPart="7"
                       comment="The ServiceFilter structure holds all information required by the Directory service for service lookup operation. The field filters are AND'd together.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="serviceProviderName" canBeNull="false"
                     comment="The required service provider. Can be the wildcard value of '*' in which case matches all values.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="domain" canBeNull="false"
                     comment="The domain to query. Can be the wildcard value of '*' in which case matches all values.">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="network" canBeNull="false"
                     comment="The network to match. Can be the wildcard value of '*' in which case matches all values.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="sessionType"
                     comment="The session type to match. Can be NULL in which case matches all values.">
            <mal:type name="SessionType" area="MAL"/>
          </mal:field>
          <mal:field name="sessionName" canBeNull="false"
                     comment="The session name to match. Can be the wildcard value of '*' in which case matches all values.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="serviceKey" canBeNull="false"
                     comment="The service to filter on, values can be '0' which matches all values.">
            <mal:type name="ServiceKey" area="Common"/>
          </mal:field>
          <mal:field name="requiredCapabilities" canBeNull="false"
                     comment="List of required capabilities. If zero length list then matches any.">
            <mal:type list="true" name="UInteger" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="A ServiceProvider object represents a service provider. The COM object body shall hold the service provider name.&#xA;The ServiceProvider COM object related link shall not be used and therefore set to NULL.&#xA;The ServiceProvider COM object source link shall not be used and therefore set to NULL.&#xA;A ProviderCapabilities object represents the supported capabilities of a service provider. The COM object body shall hold the provider details of the service provider.&#xA;The ProviderCapabilities COM object related link shall indicate which ServiceProvider COM object it links to.&#xA;The ProviderCapabilities COM object source link shall not be used and therefore set to NULL.&#xA;ServiceProvider and ProviderCapabilities objects shall be created by the publishService operation.&#xA;The object instance identifier for the ServiceProvider and ProviderCapabilities objects shall be populated by the provider of the directory service.&#xA;For the AddressDetails of a particular ProviderCapabilities object, if the brokerProviderObjInstId field contains a value and the brokerURI field is NULL, then the brokerURI value of the referenced provider shall be used.">
          <com:object name="ServiceProvider" number="1">
            <com:objectType>
              <mal:type name="Identifier" area="MAL"/>
            </com:objectType>
          </com:object>
          <com:object name="ProviderCapabilities" number="2">
            <com:objectType>
              <mal:type name="ProviderDetails" service="Directory" area="Common"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Directory" area="Common"/>
            </com:relatedObject>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="All directory objects should be stored in the COM archive by the provider of the service."/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Login" number="2"
                 comment="The Login service defines the primary mechanism for the submission of authentication details to a deployment specific security system. It supports operations to allow a user to login, logout, report available roles, and also handover the login to another user.&#xA;The service is closely tied to the Access Control aspect of the MAL where the returned authentication identifiers are used in the MAL message header to authenticate and authorise message via Access Control.&#xA;The login service supports the concept of roles, where users may log in with a specific role; the meaning of each role is mission-specific, however it is expected that a specific role allocates the user privileges to invoke operations on mission operation services.&#xA;The use of login roles is optional but if they are used then the role details are held in the COM archive and the COM archive operations are used to manage the role definitions. It is expected that the login roles are maintained by the users responsible for the login service provider.&#xA;The form in which the password is sent to the Login service provider must be agreed upon beforehand and is dependent on the security system deployed. For example, most security implementations do not recommend the use of plain text passwords but rather some encrypted version of the password. For this reason the contents of the messages sent between the login service consumer and provider during authentication handshaking are implementation-specific.&#xA;The authentication and authorisation concept of the MO services is covered in section 3.6 of the Reference Model (R2).">
      <mal:documentation name="High Level Requirements" order="1">The login service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for logging in;&lt;/li&gt;
 &lt;li&gt;the capability for logging out;&lt;/li&gt;
 &lt;li&gt;the capability for reporting the list of possible roles for a login profile;&lt;/li&gt;
 &lt;li&gt;the capability to hand over an existing login from one user to another.&lt;/li&gt;
&lt;/ol&gt;</mal:documentation>
      <mal:capabilitySet number="1">
        <mal:requestIP name="login" number="1" supportInReplay="false"
                       comment="The login operation allows a user to log in to the system. A user can log in more than once by using a different role; however, a specific deployment may place limits on the number of users that may use a specific role, and in that case will fail the login operation.">
          <mal:messages>
            <mal:request>
              <mal:field name="userDetails"
                         comment="The userDetails field shall contain the details of the new user and role combination.&#xA;If the username field of the supplied Profile structure is either the wildcard '*' or empty an INVALID error shall be returned.&#xA;If roles are required by the system and the role field of the supplied Profile structure is NULL then an INVALID error shall be returned.&#xA;The role field of the supplied Profile structure may be NULL if roles are not used by the system.&#xA;An UNKNOWN error shall be returned if the username, password and role combination are not correct for the system i.e. unknown user/role or incorrect password.&#xA;A DUPLICATE error shall be returned if the username and role combination is currently in use.&#xA;A TOO_MANY error shall be returned if the username or role are already used and exceed the permitted maximum usage value (deployment dependent).&#xA;If the login is successful the provider should create a new LoginInstance COM object and store it in the COM archive.&#xA;The related link of the new LoginInstance COM object shall be set to the requested LoginRole COM object.&#xA;A LoginEvent COM event shall be generated at this point.">
                <mal:type name="Profile" service="Login" area="Common"/>
              </mal:field>
              <mal:field name="password">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="authId"
                         comment="The returned authId field shall be used as the authenticationId field in future MAL messages by the consumer MAL for authentication. The token is specific to the user and role in use.">
                <mal:type name="Blob" area="MAL"/>
              </mal:field>
              <mal:field name="objInstId"
                         comment="The returned objInstId field shall contain the LoginInstance COM object instance identifier that was created by the login operation.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Username/role combination currently in use.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Role concurrent session limit count exceeded.">
              <mal:type name="TOO_MANY" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Unknown username/role/password combination.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="logout" number="2" supportInReplay="false"
                      comment="The logout operation allows a user to log out from the system. No information is passed in the message as the MAL authentication Id is enough to identify the login.">
          <mal:messages>
            <mal:submit comment="Upon reception of the message the operation shall remove the matched user from the set of logged in users in the login service provider.&#xA;A LogoutEvent COM event shall be generated at this point.&#xA;No errors shall be returned by this operation."/>
          </mal:messages>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="listRoles" number="3" supportInReplay="false"
                       comment="The listRoles operation returns the list of available roles for a specific user. This operation is expected to be called before a user logs in so that the software can provide a list of possible roles.">
          <mal:messages>
            <mal:request>
              <mal:field name="username"
                         comment="The username field shall hold the details of the user.&#xA;If the username field is either the wildcard '*', NULL or empty an INVALID error shall be returned.">
                <mal:type name="Identifier" area="MAL"/>
              </mal:field>
              <mal:field name="password"
                         comment="An UNKNOWN error shall be returned if the username and password combination are not correct for the system i.e. unknown user or incorrect password.">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="permittedRoles"
                         comment="The operation shall return a list of role object instance identifiers that are permitted for the user or NULL if roles are not used by the system.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown username/password combination.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:requestIP name="handover" number="4" supportInReplay="false"
                       comment="The handover operation allows an existing login to be transferred to a new user. Two cases are expected here, the first is where the operation is used to change the user's current role, and the second is where an operations context is handed over to another user.">
          <mal:messages>
            <mal:request>
              <mal:field name="newUserDetails"
                         comment="The newUserDetails field shall contain the details of the new user and role combination.&#xA;If the username field of the supplied Profile structure is either NULL, the wildcard '*', or empty an INVALID error shall be returned.&#xA;If roles are required by the system and the role field of the supplied Profile structure is NULL then an INVALID error shall be returned.&#xA;The role field of the supplied Profile structure may be NULL if roles are not used by the system.&#xA;An UNKNOWN error shall be returned if the username, password and role combination are not correct for the system i.e. unknown user/role or incorrect password.&#xA;A DUPLICATE error shall be returned if the username and role combination is currently in use.&#xA;A TOO_MANY error shall be returned if the username or role are already used and exceed the permitted maximum usage value (deployment dependent).&#xA;The DUPLICATE and TOO_MANY checks shall take into account the fact that current operator/role combination will be logged out after the handover operation completes.&#xA;If the handover is successful the provider should create a new LoginInstance COM object and store it in the COM archive.&#xA;The related link of the new LoginInstance COM object shall be set to the requested LoginRole COM object.&#xA;The source link of the new LoginInstance COM object shall be set to the LoginInstance COM object that represents the previous login.">
                <mal:type name="Profile" service="Login" area="Common"/>
              </mal:field>
              <mal:field name="newUserPassword">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="newAuthId"
                         comment="The returned newAuthId field shall be used as the authenticationId field in future MAL messages by the consumer MAL for authentication. The token is specific to the new user and role in use.">
                <mal:type name="Blob" area="MAL"/>
              </mal:field>
              <mal:field name="newObjInstId"
                         comment="The returned newObjInstId field shall contain the new LoginInstance COM object instance identifier that was created by the operation.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown username/role/password combination.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Role concurrent session limit count exceeded.">
              <mal:type name="TOO_MANY" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Username/role combination currently in use.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="Profile" shortFormPart="1"
                       comment="The Profile structure contains details of the user who is logging on to take a specified role.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="username" canBeNull="false" comment="The name of the user.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="role"
                     comment="The optional object instance identifier of the role required by the user.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Instances of a user login shall be represented as LoginInstance COM object.&#xA;Instances of a user role shall be represented as LoginRole COM object.&#xA;LoginInstance objects shall be created by the login and handover operations.&#xA;The object instance identifier for a LoginInstance object shall be populated by the provider of the Login service.&#xA;The LoginInstance object shall use the related link to indicate which LoginRole (if any) the login uses.&#xA;If a LoginInstance object was created during a login operation then the source link shall be set to NULL.&#xA;If a LoginInstance object was created during a handover operation it shall use the source link to indicate which LoginInstance the login was handed over from.">
          <com:object name="LoginRole" number="1"
                      comment="The body of the LoginRole object is the role name Identifier.">
            <com:objectType>
              <mal:type name="Identifier" area="MAL"/>
            </com:objectType>
          </com:object>
          <com:object name="LoginInstance" number="2">
            <com:objectType>
              <mal:type name="Profile" service="Login" area="Common"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Login" area="Common"/>
            </com:relatedObject>
            <com:sourceObject>
              <com:objectType number="2" service="Login" area="Common"/>
            </com:sourceObject>
          </com:object>
        </com:objects>
        <com:events comment="When a user logs in a LoginEvent COM event shall be generated.&#xA;When a user logs out a LogoutEvent COM event shall be generated.&#xA;When the handover operation is successful a LogoutEvent COM event shall be generated for the previous login and a LoginEvent COM event shall be generated for the new login.&#xA;The LoginEvent event shall use the related link to indicate which LoginInstance object is being logged in.&#xA;The LogoutEvent event shall use the related link to indicate which LoginInstance object is being logged out.&#xA;The LoginEvent event shall not use the COM object source link and shall set it to NULL.&#xA;The LogoutEvent event shall use the source link to indicate which LoginEvent event it is logging out.&#xA;The events shall be published using the COM event service.">
          <com:event name="LoginEvent" number="3">
            <com:relatedObject>
              <com:objectType number="2" service="Login" area="Common"/>
            </com:relatedObject>
          </com:event>
          <com:event name="LogoutEvent" number="4">
            <com:relatedObject>
              <com:objectType number="2" service="Login" area="Common"/>
            </com:relatedObject>
            <com:sourceObject>
              <com:objectType number="3" service="Login" area="Common"/>
            </com:sourceObject>
          </com:event>
        </com:events>
        <com:archiveUsage comment="LoginInstance objects should be stored in the COM archive.&#xA;When a login service event is published, the event object should be stored in the COM archive by the publisher.&#xA;LoginRole objects shall be stored in the COM archive.&#xA;The COM archive operations shall be used for creating/updating/deleting the LoginRole objects."/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Configuration" number="5"
                 comment="The Configuration service allows a service consumer to activate pre-defined configurations of a service provider. &#xA;The service uses a COM object to represent the different configurations allowed by a service provider; a service consumer selects one configuration to activate using the Configuration service activate operation.&#xA;The contents of a configuration for a service provider is deployment specific however the management of these configurations, and the selection of a configuration for current use, is the purpose of this service.&#xA;Implementations of this service may also use bespoke methods for configuration representation (such as hardcoded configuration) which is outside the scope of this specification, however, the status and management of these configurations can still be managed with this service.">
      <mal:documentation name="High Level Requirements" order="1">The configuration service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for activating a configuration;&lt;/li&gt;
 &lt;li&gt;the capability for listing available configurations;&lt;/li&gt;
 &lt;li&gt;the capability to manage the available configurations;&lt;/li&gt;
 &lt;li&gt;the capability to get and store the current configuration;&lt;/li&gt;
 &lt;li&gt;and the capability to import/export configurations from/to XML.&lt;/li&gt;
&lt;/ol&gt;</mal:documentation>
      <mal:capabilitySet number="1">
        <mal:submitIP name="activate" number="1" supportInReplay="false"
                      comment="The activate operation instructs a service provider to make a specific configuration active.">
          <mal:messages>
            <mal:submit>
              <mal:field name="configObjId"
                         comment="The operation shall take a COM object identifier that identifies the configuration to activate.&#xA;An UNKNOWN error shall be returned if the object instance identifier does not match an existing configuration.&#xA;If the object instance identifier does not reference a valid configuration for the service provider an INVALID error shall be returned.&#xA;A ConfigurationActivation COM Event shall be published if no errors are being returned.&#xA;A ConfigurationActivationRequest COM Event shall contain the selected service to be reconfigured.&#xA;The service provider that implements the selected service shall, after the reception of the event, reconfigure itself and publish a ConfigurationSwitchResult COM event.&#xA;If the operation fails the previous configuration shall remain active.">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested configuration is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested configuration is invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="list" number="2" supportInReplay="false"
                       comment="The list operation returns list of known configurations for a certain configuration type in a specific domain.">
          <mal:messages>
            <mal:request>
              <mal:field name="service"
                         comment="The configurationType argument shall hold the type of configuration to be listed.&#xA;The domain request argument shall contain the COM object instance identifier and the domain of the configurable component to return the list of possible configurations.&#xA;If the domain contains a wildcard in any of its parts, then the returned configurations shall be Composite Configurations.">
                <mal:type name="ServiceProviderKey" service="Configuration" area="Common"/>
              </mal:field>
              <mal:field name="type"
                         comment="If any of the service argument fields contains a wildcard &amp;lsquo;0&amp;rsquo; then the returned configurations shall be Provider Configurations.&#xA;If the domain and service arguments contain no wildcards then the returned configurations shall be Service Configurations.&#xA;An UNKNOWN error shall be returned if the object instance identifier does not match an existing configuration.&#xA;If the object instance identifier does not reference a valid configuration for the service provider an INVALID error shall be returned.">
                <mal:type name="ConfigurationType" service="Configuration" area="Common"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="objInstIds"
                         comment="Return objectIds can be used in the activate and get operations.">
                <mal:type list="true" name="ObjectId" area="COM"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested object is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested configuration is not a valid configuration object type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:requestIP name="getCurrent" number="3" supportInReplay="false"
                       comment="The getCurrent operation returns the currently selected configuration of a Service/Provider/Composite.">
          <mal:messages>
            <mal:request>
              <mal:field name="service"
                         comment="The domain request argument shall contain the COM object instance identifier and the domain of the configurable component to return the list of possible configurations.&#xA;If the domain contains a wildcard in any of its parts, then configurations matching that domain shall be returned.&#xA;If any of the service argument fields contains a wildcard then the configurations matching that criteria shall be returned.&#xA;If the domain and service arguments contain no wildcards then configurations for a specific service shall be returned.&#xA;If there are wildcards both on the domain and service fields, then&amp;hellip;&#xA;An UNKNOWN error shall be returned if the combination of domain and service fields don't match an existing configuration.&#xA;No wildcards are supported, an error must be returned in this case.">
                <mal:type name="ServiceProviderKey" service="Configuration" area="Common"/>
              </mal:field>
              <mal:field name="type">
                <mal:type name="ConfigurationType" service="Configuration" area="Common"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="objInstId">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested configuration is not a valid configuration object type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested object is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:requestIP name="exportXML" number="4" supportInReplay="false"
                       comment="The exportXML operation returns the actual Configuration information in the XML format from the configuration object stored in the Archive.&#xA;The returned XML is in the standardised format and one of two levels of detail, compact or complete, can be selected. Compact contains just the COM object instance identifiers with the respective domains and object types whereas complete augments the compact with the additional set of values inside the respective service objects. ">
          <mal:messages>
            <mal:request>
              <mal:field name="confObjId"
                         comment="The confObjId argument shall contain the COM object instance identifier of the configuration object to return the XML representation of.">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
              <mal:field name="getComplete"
                         comment="The getComplete Boolean shall be set to True if the returned XML is to be in the complete standardised format, otherwise it will be in the compact standardised format.">
                <mal:type name="Boolean" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="xmlConfiguration"
                         comment="The returned File object shall contain the configuration XML.&#xA;The Configuration object shall not be deleted from the COM Archive.">
                <mal:type name="File" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested configuration is not a valid configuration object type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested object is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4">
        <mal:submitIP name="add" number="5" supportInReplay="false"
                      comment="The add operation makes a new Configuration available on the Configuration Service. The Configuration must already exist in the COM archive to be added to the Configuration Service.">
          <mal:messages>
            <mal:submit>
              <mal:field name="configObj"
                         comment="The first argument shall contain the object identifier of the configurable object to add the configurations to.">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
              <mal:field name="configObjIds"
                         comment="The second argument shall contain a list of configurations to add to the list of configurations available for the supplied first argument.">
                <mal:type list="true" name="ObjectId" area="COM"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Supplied configuration is not a valid configuration object type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Supplied object is unknown in the COM archive.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="remove" number="6" supportInReplay="false"
                      comment="The remove operation, removes a Configuration from the Configuration service. The operation does not remove the Configuration objects from the COM archive, merely removes the objects from the provider.">
          <mal:messages>
            <mal:submit>
              <mal:field name="configObjIds"
                         comment="The configObjIds field shall hold the object instance identifiers of the configuration objects to be removed from the provider.&#xA;It must only contain the object identifiers to ServiceConfiguration, ProviderConfiguration, or CompositeConfiguration objects, otherwise an INVALID error shall be raised.&#xA;If a provided object identifier does not match an existing configuration object then this operation shall fail with an UNKNOWN error.&#xA;If an error is raised then no alerts shall be removed as a result of this operation call.&#xA;Matched configuration objects shall not be removed from the COM archive only the list of configuration objects in the provider.">
                <mal:type list="true" name="ObjectId" area="COM"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied configuration object instance identifiers is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="A list of the indexes of the error values shall be contained in the extra information field.">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied configuration objects is not of the correct type.">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of the indexes of the erroneous values from the originating list supplied.">
                <mal:type list="true" name="UInteger" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5">
        <mal:invokeIP name="storeCurrent" number="7" supportInReplay="false"
                      comment="The storeCurrent generates a new Configuration object with the current Configuration of a specific Service, Provider or Composite configuration and stores it in the COM archive. Optionally the configuration can be added to the list of available configurations.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="service"
                         comment="The operation shall publish a ConfigurationStore event containing the selected configuration to be stored.&#xA;The service provider that implements the selected service shall, after the reception of the event, store the current Configuration in the COM Archive.&#xA;Once the relevant service provider has finished storing its configuration it shall publish a ConfigurationStored event.">
                <mal:type name="ServiceProviderKey" service="Configuration" area="Common"/>
              </mal:field>
              <mal:field name="type">
                <mal:type name="ConfigurationType" service="Configuration" area="Common"/>
              </mal:field>
              <mal:field name="autoAdd">
                <mal:type name="Boolean" area="MAL"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement/>
            <mal:response>
              <mal:field name="objInstId"
                         comment="The response shall contain the object identifier of the new configuration object.">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Not a valid Service/Provider/Composite object">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="6">
        <mal:requestIP name="importXML" number="8" supportInReplay="false"
                       comment="The importXML generates a new Configuration object from a XML File and stores the Configuration in the COM archive. Afterwards, the configuration can be optionally added to the list of available configurations.">
          <mal:messages>
            <mal:request>
              <mal:field name="xmlFile"
                         comment="The newly generated Configuration object should be checked for consistency. An error shall be raised if the configuration is not valid.&#xA;For every object present within the XML file that does not exist in the COM Archive, the Configuration service shall create a new object with the same content and store the object in the COM Archive.&#xA;If the object already exists in the COM Archive, nothing shall be created.&#xA;The newly generated Configuration object shall always reference existing objects in the Archive.">
                <mal:type name="File" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="objInstIds"
                         comment="The return response shall contain the object identifier of the new configuration object.">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The supplied XML was not valid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:enumeration name="ConfigurationType" shortFormPart="4" comment="">
          <mal:item value="COMPOSITE" nvalue="1" comment=""/>
          <mal:item value="PROVIDER" nvalue="2" comment=""/>
          <mal:item value="SERVICE" nvalue="3" comment=""/>
        </mal:enumeration>
        <mal:composite name="ConfigurationObjectSet" shortFormPart="1" comment="">
          <mal:field name="objType" canBeNull="false" comment="">
            <mal:type name="ObjectType" area="COM"/>
          </mal:field>
          <mal:field name="domain" canBeNull="false" comment="">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="objInstIds" canBeNull="false" comment="">
            <mal:type list="true" name="Long" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ConfigurationObjectDetails" shortFormPart="2" comment="">
          <mal:field name="configObjects" canBeNull="false" comment="">
            <mal:type list="true" name="ConfigurationObjectSet" service="Configuration" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceProviderKey" shortFormPart="3"
                       comment="The ServiceProviderKey structure holds information to uniquely identify a service Provider.">
          <mal:field name="serviceKey"
                     comment="The area, service, and version fields. If NULL then all the services will be matched.">
            <mal:type name="ServiceKey" area="Common"/>
          </mal:field>
          <mal:field name="domain" canBeNull="false"
                     comment="The domain of the provider. Only the objects whose domain&#xA;matches the provided domain will&#xA;be returned. The domain field&#xA;supports the wildcard value of &amp;lsquo;*&amp;rsquo;&#xA;only in the last part of the domain.">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Two COM objects shall be used to hold the configuration definition details, the first is a ConfigurationDefinition COM object that holds the activation state of the configuration and a second COM object that holds the actual configuration details.&#xA;The ConfigurationDefinition object shall use the source link to indicate which COM object holds the actual configuration information.&#xA;The ConfigurationDefinition object does not use the related link and it shall be set to NULL.&#xA;The body of the ConfigurationDefinition object shall be a Boolean which indicates whether it is active or not.&#xA;The COM object that holds the configuration details may be represented as a file in which case a ConfigurationFile COM object should be used to represent it.">
          <com:object name="ServiceConfiguration" number="1">
            <com:objectType>
              <mal:type name="ServiceKey" area="Common"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="4" service="Configuration" area="Common"/>
            </com:relatedObject>
          </com:object>
          <com:object name="ProviderConfiguration" number="2">
            <com:objectType>
              <mal:type name="Identifier" area="MAL"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="4" service="Configuration" area="Common"/>
            </com:relatedObject>
          </com:object>
          <com:object name="CompositeConfiguration" number="3">
            <com:objectType>
              <mal:type name="Identifier" area="MAL"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="4" service="Configuration" area="Common"/>
            </com:relatedObject>
          </com:object>
          <com:object name="ConfigurationObjects" number="4">
            <com:objectType>
              <mal:type name="ConfigurationObjectDetails" service="Configuration" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="ConfigurationFile" number="5">
            <com:objectType>
              <mal:type name="File" area="MAL"/>
            </com:objectType>
          </com:object>
          <com:object name="ProviderConfigurations" number="6">
            <com:relatedObject>
              <com:objectType number="1" service="Directory" area="Common"/>
            </com:relatedObject>
            <com:sourceObject>
              <com:objectType number="2" service="Configuration" area="Common"/>
            </com:sourceObject>
          </com:object>
        </com:objects>
        <com:events comment="A ConfigurationSwitch COM event shall represent a request change in active configuration.&#xA;The ConfigurationSwitch COM event body shall hold the configuration to be activated.&#xA;The ConfigurationSwitch COM event related link shall point to the previous active configuration or be NULL if no configuration was previously active.&#xA;The ConfigurationSwitch COM event source link should indicate the object that caused it to be created, most likely a COM OperationActivity object or an operator login in the case of off-line editors being used.&#xA;A ConfigurationSwitched COM event shall be raised when a configuration is made active.&#xA;The ConfigurationSwitched COM event body shall hold the Result of the activation attempt.&#xA;The ConfigurationSwitched COM event related link shall point to the ConfigurationSwitch event that triggered the switch attempt.&#xA;The ConfigurationSwitched COM event source link shall be NULL.&#xA;A ConfigurationStore COM event shall represents a request to store the current configuration.&#xA;The ConfigurationStore COM event body shall hold the &#34;service that must store its configurations&#34; (?!).&#xA;The ConfigurationStore COM event related link shall be NULL.&#xA;The ConfigurationStore COM event source link should indicate the object that caused it to be created, most likely a COM OperationActivity object or an operator login in the case of off-line editors being used.&#xA;A ConfigurationStored COM event shall be raised when a configuration has been stored.&#xA;The ConfigurationStored COM event body shall hold the Result of the store attempt.&#xA;The ConfigurationStored COM event related link shall point to the ConfigurationStore event that triggered the store attempt.&#xA;The ConfigurationStored COM event source link shall be NULL.">
          <com:event name="ConfigurationSwitch" number="8">
            <com:objectType>
              <mal:type name="ObjectId" area="COM"/>
            </com:objectType>
            <com:relatedObject comment="The related object contains the objInstId of the current active configuration. NULL if no configuration currently active."/>
            <com:sourceObject comment="The source link of the event is the object that triggered the activation, most likely the activate operation."/>
          </com:event>
          <com:event name="ConfigurationSwitched" number="9">
            <com:objectType>
              <mal:type name="Boolean" area="MAL"/>
            </com:objectType>
            <com:relatedObject comment="The ConfigurationSwitch COM event that triggered the switch attempt.">
              <com:objectType number="8" service="Configuration" area="Common"/>
            </com:relatedObject>
          </com:event>
          <com:event name="ConfigurationStore" number="10">
            <com:sourceObject comment="The source link of the event is the object that triggered the activation, most likely the storeCurrent operation."/>
          </com:event>
          <com:event name="ConfigurationStored" number="11">
            <com:objectType>
              <mal:type name="Boolean" area="MAL"/>
            </com:objectType>
            <com:relatedObject comment="The related link of the event is the ConfigurationStore COM object that triggered the storing.">
              <com:objectType number="10" service="Configuration" area="Common"/>
            </com:relatedObject>
            <com:sourceObject comment="The source of the event can be a ServiceConfiguration, ProviderConfiguration or CompositeConfiguration COM object."/>
          </com:event>
        </com:events>
        <com:archiveUsage comment="Configuration definition objects should be stored in the COM archive.&#xA;The COM objects that hold the actual configuration definition details should be stored in the COM archive.&#xA;When a configuration switch or store event is published, the event objects should be stored in the COM archive."/>
      </com:features>
    </mal:service>
    <mal:dataTypes>
      <mal:composite name="ServiceKey" shortFormPart="3" comment="">
        <mal:extends>
          <mal:type name="Composite" area="MAL"/>
        </mal:extends>
        <mal:field name="area" canBeNull="false"
                   comment="The area of this service taken from the numeric Area identifier of the service specification.">
          <mal:type name="UShort" area="MAL"/>
        </mal:field>
        <mal:field name="service" canBeNull="false"
                   comment="The service taken from the numeric Service identifier of the service specification.">
          <mal:type name="UShort" area="MAL"/>
        </mal:field>
        <mal:field name="version" canBeNull="false"
                   comment="The version of this service taken from the Area Version of the area specification.">
          <mal:type name="UOctet" area="MAL"/>
        </mal:field>
      </mal:composite>
    </mal:dataTypes>
  </mal:area>
</mal:specification>