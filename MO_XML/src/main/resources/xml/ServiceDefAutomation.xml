<?xml version="1.0" encoding="UTF-8"?>
<smc:specification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:smc="http://www.ccsds.org/schema/ServiceSchema" xmlns:com="http://www.ccsds.org/schema/COMSchema"
	xmlns:mal="http://www.ccsds.org/schema/ServiceSchema">
	<smc:area name="Automation" number="100" version="1">
		<smc:service xsi:type="com:ExtendedServiceType" name="ScheduleExecution"
			number="2">
			<smc:capabilitySet number="11">
				<smc:requestIP name="list" number="1" supportInReplay="false"
					comment="Gets all Schedules">
					<smc:messages>
						<smc:request>
							<smc:type area="Automation" service="ScheduleExecution"
								name="ScheduleFilter" />
						</smc:request>
						<smc:response>
							<smc:type list="true" area="MAL" service="ScheduleExecution"
								name="Long" />
						</smc:response>
					</smc:messages>
				</smc:requestIP>
				<smc:requestIP name="get" number="12" supportInReplay="false"
					comment="Gets a Schedule by ID">
					<smc:messages>
						<smc:request>
							<smc:field name="scheduleId" comment="Schedule Identifier">
								<smc:type area="MAL" name="Long" />
							</smc:field>
						</smc:request>
						<smc:response>
							<smc:field name="schedule" comment="The Schedule to execute">
								<smc:type area="Automation" service="ScheduleExecution"
									name="Schedule" />
							</smc:field>
						</smc:response>
					</smc:messages>
				</smc:requestIP>
			</smc:capabilitySet>
			<smc:capabilitySet number="2">
				<smc:requestIP name="add" number="21" supportInReplay="false"
					comment="Submits a Schedule for execution">
					<smc:messages>
						<smc:request>
							<smc:field name="scheduleDefinitionId" comment="ScheduleDefinition ID">
								<smc:type area="MAL" name="Long" />
							</smc:field>
							<smc:field name="schedule" comment="The Schedule to execute">
								<smc:type area="Automation" service="ScheduleExecution"
									name="Schedule" />
							</smc:field>
						</smc:request>
						<smc:response>
							<smc:field name="scheduleId" comment="Schedule Identifier">
								<smc:type area="MAL" name="Long" />
							</smc:field>
						</smc:response>
					</smc:messages>
				</smc:requestIP>
				<smc:submitIP name="update" number="22" supportInReplay="false"
					comment="Updates the Schedule by ID">
					<smc:messages>
						<smc:submit>
							<smc:field name="scheduleId" comment="Schedule Identifier">
								<smc:type area="MAL" name="Long" />
							</smc:field>
							<smc:field name="schedule" comment="The Schedule to execute">
								<smc:type area="Automation" service="ScheduleExecution"
									name="Schedule" />
							</smc:field>
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
				<smc:submitIP name="remove" number="23" supportInReplay="false"
					comment="Removes a Schedule by ID">
					<smc:messages>
						<smc:submit>
							<smc:field name="scheduleId" comment="Schedule Identifier">
								<smc:type area="MAL" name="Long" />
							</smc:field>
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
			</smc:capabilitySet>
			<smc:capabilitySet number="3">
				<smc:submitIP name="start" number="31" supportInReplay="false"
					comment="Starts the Schedule execution">
					<smc:messages>
						<smc:submit>
							<smc:type area="MAL" name="Long" />
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
				<smc:submitIP name="pause" number="32" supportInReplay="false"
					comment="Pauses the Schedule execution">
					<smc:messages>
						<smc:submit>
							<smc:type area="MAL" name="Long" />
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
				<smc:submitIP name="resume" number="33" supportInReplay="false"
					comment="Resumes the paused Schedule execution">
					<smc:messages>
						<smc:submit>
							<smc:type area="MAL" name="Long" />
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
				<smc:submitIP name="terminate" number="34"
					supportInReplay="false" comment="Terminates the running Schedule">
					<smc:messages>
						<smc:submit>
							<smc:type area="MAL" name="Long" />
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
			</smc:capabilitySet>
			<smc:capabilitySet number="4">
				<smc:requestIP name="listDefinition" number="41"
					supportInReplay="true"
					comment="Retrieves Schedule Definition based on Identifier (name)">
					<smc:messages>
						<smc:request>
							<smc:field name="identifierList" comment="List of identifiers">
								<smc:type name="IdentifierList" area="MAL" />
							</smc:field>
						</smc:request>
						<smc:response>
							<smc:field name="scheduletDefinitionIds" comment="List of Schedule Definition IDs">
								<smc:type list="true" area="MAL" name="Long" />
							</smc:field>
						</smc:response>
					</smc:messages>
				</smc:requestIP>
			</smc:capabilitySet>
			<smc:capabilitySet number="5">
				<smc:requestIP name="addDefinition" number="51"
					supportInReplay="false"
					comment="Adds Schedule Definition. Definition serves as a blueprint for Occurrences">
					<smc:messages>
						<smc:request
							comment="Adds Schedule Definition. Definition serves as a blueprint for Occurrences.">
							<smc:field name="scheduleDefinition" comment="The new Schedule Definition">
								<smc:type name="ScheduleDefinition" service="ScheduleExecution"
									area="Automation" />
							</smc:field>
						</smc:request>
						<smc:response comment="The Schedule Definition ID">
							<smc:field name="scheduleDefinitionId" comment="The Schedule Definition ID">
								<smc:type name="Long" area="MAL" />
							</smc:field>
						</smc:response>
					</smc:messages>
					<smc:errors>
						<smc:errorRef
							comment="One of the supplied Schedule Definitions contains an invalid name">
							<smc:type name="INVALID" area="COM" />
							<smc:extraInformation
								comment="The extra information field contains the indexes of the erroneous values from the originating list supplied">
								<smc:type list="true" name="UInteger" area="MAL" />
							</smc:extraInformation>
						</smc:errorRef>
						<smc:errorRef
							comment=" One or more of the Schedule Definitions being added has supplied a Planning Request name that is already in use in the domain">
							<smc:type name="DUPLICATE" area="COM" />
							<smc:extraInformation
								comment="The extra information field contains the indexes of the erroneous values from the originating request list">
								<smc:type list="true" name="UInteger" area="MAL" />
							</smc:extraInformation>
						</smc:errorRef>
					</smc:errors>
				</smc:requestIP>
				<smc:submitIP name="updateDefinition" number="52"
					supportInReplay="false"
					comment="Updates Schedule Definition referenced by Schedule Definition ID">
					<smc:messages>
						<smc:submit comment="The Schedule Definition ID">
							<smc:field name="scheduleDefinitionId" comment="The Schedule Definition ID">
								<smc:type name="Long" area="MAL" />
							</smc:field>
							<smc:field name="scheduleDefinition" comment="The new schedule Definition">
								<smc:type name="ScheduleDefinition" service="ScheduleExecution"
									area="Automation" />
							</smc:field>
						</smc:submit>
					</smc:messages>
					<smc:errors>
						<smc:errorRef
							comment="One of the supplied Schedule Definitions is trying to change its name">
							<smc:type name="INVALID" area="COM" />
							<smc:extraInformation
								comment="The extra information field contains the indexes of the erroneous values from the originating list supplied">
								<smc:type list="true" name="UInteger" area="MAL" />
							</smc:extraInformation>
						</smc:errorRef>
						<smc:errorRef
							comment="One of the supplied Schedule Definition object instance identifiers is unknown">
							<smc:type name="UNKNOWN" area="MAL" />
							<smc:extraInformation
								comment="The indexes of the error values shall be contained in the extra information field">
								<smc:type list="true" name="UInteger" area="MAL" />
							</smc:extraInformation>
						</smc:errorRef>
					</smc:errors>
				</smc:submitIP>
				<smc:submitIP name="removeDefinition" number="53"
					supportInReplay="false" comment="Removes Schedule Definition by ID">
					<smc:messages>
						<smc:submit comment="The Schedule Definition ID">
							<smc:field name="scheduleDefinitionId" comment="The Schedule Definition ID">
								<smc:type name="Long" area="MAL" />
							</smc:field>
						</smc:submit>
					</smc:messages>
					<smc:errors>
						<smc:errorRef
							comment="One of the supplied Schedule Definition object instance identifiers is unknown">
							<smc:type name="UNKNOWN" area="MAL" />
							<smc:extraInformation
								comment="The indexes of the error values shall be contained in the extra information field">
								<smc:type list="true" name="UInteger" area="MAL" />
							</smc:extraInformation>
						</smc:errorRef>
					</smc:errors>
				</smc:submitIP>
			</smc:capabilitySet>
			<smc:capabilitySet number="6">
				<smc:pubsubIP name="monitorSchedules" number="61"
					supportInReplay="false"
					comment="Subscribe to Schedule content updates. Notifications are sent on Schedule creation, updates and removal according to the given filter">
					<smc:messages>
						<smc:publishNotify>
							<smc:type area="Automation" service="ScheduleExecution"
								name="ScheduleFilter" />
						</smc:publishNotify>
					</smc:messages>
				</smc:pubsubIP>
				<smc:pubsubIP name="monitorExecution" number="62"
					supportInReplay="false"
					comment="Subscribe to Schedule execution monitoring. Notifications are sent on Schedule status changes">
					<smc:messages>
						<smc:publishNotify>
							<smc:type area="MAL" service="ScheduleExecution" name="Long" />
							<smc:type area="Automation" service="ScheduleExecution"
								name="LevelOfDetail" />
						</smc:publishNotify>
					</smc:messages>
				</smc:pubsubIP>
			</smc:capabilitySet>
			<smc:dataTypes>
				<smc:composite name="ScheduleDefinition"
					shortFormPart="1"
					comment="This data structure defines a schedule definition composite">
					<smc:field name="name" comment="Name of schedule definition">
						<smc:type area="MAL" name="String" />
					</smc:field>
					<smc:field name="description" comment="Description of schedule definition">
						<smc:type area="MAL" name="String" />
					</smc:field>
					<smc:field name="arguments" comment="Schedule argument values">
						<smc:type list="true" area="Automation" name="ScheduleArgumentValue"
							service="ScheduleExecution" />
					</smc:field>
					<smc:field name="attachements" comment="Attachments to the Schedule">
						<smc:type list="true" area="MAL" name="Blob" />
					</smc:field>
				</smc:composite>
				<smc:composite name="ScheduleArgumentValue"
					shortFormPart="2"
					comment="This data structure defines a schedule argument value composite">
					<smc:field name="name" comment="Name of schedule argument value">
						<smc:type area="MAL" name="String" />
					</smc:field>
					<smc:field name="value" comment="Schedule argument value">
						<smc:type area="MAL" name="Attribute" />
					</smc:field>
				</smc:composite>
				<smc:composite name="Schedule" shortFormPart="3"
					comment="This data structure defines a schedule composite">
					<!-- TODO: Schedule Initiation Criteria, which is similar to the Activity 
						Initiation Criteria. The possibilities are Time, Position, Event -->
					<smc:field name="scheduleItems" comment="The schedule items">
						<smc:type list="true" area="Automation" name="ScheduleItem"
							service="ScheduleExecution" />
					</smc:field>
					<smc:field name="est" comment="Earliest Start Time (EST)">
						<smc:type area="MAL" name="Time" />
					</smc:field>
					<smc:field name="lst" comment="Latest Start Time (LST)">
						<smc:type area="MAL" name="Time" />
					</smc:field>
					<smc:field name="lft" comment="Latest Finish Time (LFT)">
						<smc:type area="MAL" name="Time" />
					</smc:field>
					<smc:field name="tad" comment="Task Delay (TAD)">
						<smc:type area="MAL" name="Time" />
					</smc:field>
					<smc:field name="duration" comment="duration">
						<smc:type area="MAL" name="Duration" />
					</smc:field>
					<smc:field name="values" comment="The schedule values">
						<smc:type list="true" area="Automation" name="AttributeValue"
							service="ScheduleExecution" />
					</smc:field>
				</smc:composite>
				<mal:composite name="AttributeValue" shortFormPart="4"
					comment="The AttributeValue structure holds an Attribute value. It allows a list of different Attribute types to be created whereas List&lt;Attribute&gt; would require the values to be all of the same type.&#xA;">
					<mal:extends>
						<mal:type name="Composite" area="MAL" />
					</mal:extends>
					<mal:field name="value" canBeNull="false"
						comment="The argument value. Must not be NULL. NULL may be represented by having a NULL in place of the complete AttributeValue composite.&#xA;">
						<mal:type name="Attribute" area="MAL" />
					</mal:field>
				</mal:composite>
				<smc:composite name="ScheduleItem" shortFormPart="5"
					comment="This data structure defines a schedule item composite">
					<smc:field name="activityId" comment="activity id">
						<smc:type area="MAL" name="Long" />
					</smc:field>
					<smc:field name="est" comment="Earliest Start Time (EST)">
						<smc:type area="MAL" name="Time" />
					</smc:field>
					<smc:field name="lst" comment="Latest Start Time (LST)">
						<smc:type area="MAL" name="Time" />
					</smc:field>
					<smc:field name="lft" comment="Latest Finish Time (LFT)">
						<smc:type area="MAL" name="Time" />
					</smc:field>
					<smc:field name="tad" comment="Task Delay (TAD)">
						<smc:type area="MAL" name="Time" />
					</smc:field>
					<smc:field name="duration" comment="duration">
						<smc:type area="MAL" name="Duration" />
					</smc:field>
					<!-- TODO -->
				</smc:composite>
				<smc:composite name="ScheduleStatus" shortFormPart="6"
					comment="This data structure defines a schedule status composite">
					<smc:field name="state" comment="state">
						<smc:type area="Automation" name="ScheduleState" service="ScheduleExecution" />
					</smc:field>
					<smc:field name="message" comment="message">
						<smc:type list="true" area="MAL" name="String" />
					</smc:field>
				</smc:composite>
				<smc:enumeration name="ScheduleState" shortFormPart="7">
					<smc:item value="RUNNING" nvalue="1" />
					<smc:item value="PAUSED" nvalue="2" />
					<smc:item value="HALTED" nvalue="3" />
					<smc:item value="ERROR" nvalue="4" />
					<smc:item value="ABORTED" nvalue="5" />
					<smc:item value="COMPLETED" nvalue="6" />
				</smc:enumeration>
				<smc:composite name="ScheduleFilter" shortFormPart="8"
					comment="This data structure defines a schedule filter composite">
					<!-- todo -->
				</smc:composite>
				<smc:enumeration name="LevelOfDetail" shortFormPart="9">
					<smc:item value="HIGH" nvalue="1" />
					<smc:item value="MEDIUM" nvalue="2" />
					<smc:item value="LOW" nvalue="3" />
					<smc:item value="NONE" nvalue="4" />
					<smc:item value="DEBUG" nvalue="5" />
					<smc:item value="STATEMENT" nvalue="6" />
				</smc:enumeration>
				<smc:composite name="ScheduleEvent" shortFormPart="10"
					comment="This data structure defines a schedule event composite">
					<smc:field name="type" comment="Type of event">
						<smc:type area="Automation" service="ScheduleExecution"
							name="EventType" />
					</smc:field>
				</smc:composite>
				<smc:enumeration name="EventType" shortFormPart="11">
					<smc:item value="INSERT" nvalue="1" />
					<smc:item value="UPDATE" nvalue="2" />
					<smc:item value="DELETE" nvalue="3" />
				</smc:enumeration>
			</smc:dataTypes>
			<smc:features>
				<smc:objects
					comment="The definitions of the schedules shall be represented as ScheduleDefinition COM objects.&#xA;Instances of an schedule that are submitted to a provider using the submitSchedule operation shall be represented as ScheduleInstance COM object.&#xA;The object instance identifier for an ScheduleInstance object shall be populated by the consumer.&#xA;The ScheduleInstance object shall use the related link to indicate which action definition object it uses.&#xA;The source link of the ScheduleDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object.&#xA;Instances of an action that are submitted to a provider using the submitSchedule operation shall link to the submitSchedule OperationActivity object using the source link.&#xA;&#xA;">
					<smc:object name="ScheduleDefinition" number="1">
						<smc:objectType>
							<smc:type name="ScheduleDefinition" service="ScheduleExecution"
								area="Automation" />
						</smc:objectType>
					</smc:object>
					<smc:object name="ScheduleOccurrence" number="2">
						<smc:objectType>
							<smc:type name="Schedule" service="ScheduleExecution"
								area="Automation" />
						</smc:objectType>
						<smc:relatedObject>
							<smc:objectType number="1" service="ScheduleExecution"
								area="Automation" />
						</smc:relatedObject>
					</smc:object>
				</smc:objects>
				<smc:archiveUsage
					comment="ScheduleDefinition objects should be stored in the COM archive.&#xA;When an schedule is sent with the submitSchedule operation, the ScheduleInstance object should be stored in the COM archive by the consumer.&#xA;" />
				<smc:activityUsage
					comment="The COM Activity service may be used to monitor the transfer and execution of the submitSchedule operation.&#xA;The COM Activity service may be used to monitor the transfer and execution of schedule instances.&#xA;The COM activity events shall be generated as defined in the COM activity tracking service for the submitSchedule operation.&#xA;A Release activity event for the action instance shall be generated when an action is released from a consumer using the submitAction operation.&#xA;An Acceptance activity event for the action instance shall be generated when an action is received by the destination provider as part of the submitAction operation.&#xA;The source link of the activity events for the action instance shall be the ActionInstance object.&#xA;In all activity execution events for the action instance the ActivityExecution.stageCount field shall be set to 2 plus the total number of progress stages.&#xA;In the activity execution event, when notification of an action starting is requested, the ActivityExecution.executionStage field shall be set to 1.&#xA;In the activity execution event, when notification of an action progress is requested, the ActivityExecution.executionStage field shall be set to 1 plus the current progress stage. &#xA;In the activity execution event, when notification of an action completion is requested, the ActivityExecution.executionStage field shall be set to 2 plus the total number of progress stages.&#xA;&#xA;" />
			</smc:features>
		</smc:service>
		<smc:service xsi:type="com:ExtendedServiceType" name="ProcedureExecution"
			number="4">
			<smc:capabilitySet number="1">
				<smc:requestIP name="list" number="101" supportInReplay="false"
					comment="Retrieves all Procedure Occurrences that have been submitted (or staged). Occurrences that have completed the execution are automatically removed (unstaged)">
					<smc:messages>
						<smc:request>
							<smc:type area="Automation" service="ProcedureExecution"
								name="ProcedureOccurrenceFilter" />
						</smc:request>
						<smc:response>
							<smc:type list="true" area="MAL" service="ProcedureExecution"
								name="Long" />
						</smc:response>
					</smc:messages>
				</smc:requestIP>
				<smc:requestIP name="get" number="102" supportInReplay="false"
					comment="Gets Procedure Occurrence by Identifier">
					<smc:messages>
						<smc:request>
							<smc:type area="MAL" name="Long" />
						</smc:request>
						<smc:response>
							<smc:type area="Automation" service="ProcedureExecution"
								name="Procedure" />
						</smc:response>
					</smc:messages>
				</smc:requestIP>
			</smc:capabilitySet>
			<smc:capabilitySet number="2">
				<smc:requestIP name="start" number="201"
					supportInReplay="false" comment="Starts the Procedure execution">
					<smc:messages>
						<smc:request>
							<smc:type area="MAL" name="Long" />
							<smc:type area="Automation" service="ProcedureExecution"
								name="ProcedureInvocationDetails" />
						</smc:request>
						<smc:response>
							<smc:type area="MAL" name="Long" />
						</smc:response>
					</smc:messages>
				</smc:requestIP>
				<smc:submitIP name="pause" number="202"
					supportInReplay="false" comment="Pauses the executing Procedure">
					<smc:messages>
						<smc:submit>
							<smc:type area="MAL" name="Long" />
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
				<smc:submitIP name="resume" number="203"
					supportInReplay="false" comment="Resumes the paused Procedure">
					<smc:messages>
						<smc:submit>
							<smc:type area="MAL" name="Long" />
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
				<smc:submitIP name="terminate" number="204"
					supportInReplay="false" comment="Terminates the running Procedure">
					<smc:messages>
						<smc:submit>
							<smc:type area="MAL" name="Long" />
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
			</smc:capabilitySet>
			<smc:capabilitySet number="3">
				<smc:requestIP name="listDefinition" number="301"
					supportInReplay="false" comment="Retrieves all Procedure Definitions">
					<smc:messages>
						<smc:request>
							<smc:field name="identifierList" comment="List of identifiers">
								<smc:type name="IdentifierList" area="MAL" />
							</smc:field>
						</smc:request>
						<smc:response>
							<smc:field name="procedureDefinitionIds"
								comment="Collection of Procedure Definition IDs">
								<smc:type list="true" area="MAL" service="ProcedureExecution"
									name="Long" />
							</smc:field>
						</smc:response>
					</smc:messages>
				</smc:requestIP>
			</smc:capabilitySet>
			<smc:capabilitySet number="4">
				<smc:requestIP name="addDefinition" number="401"
					supportInReplay="false" comment="Adds Procedure Definition">
					<smc:messages>
						<smc:request>
							<smc:field name="procedureDefinition" comment="Procedure Definition">
								<smc:type area="Automation" service="ProcedureExecution"
									name="ProcedureDefinition" />
							</smc:field>
						</smc:request>
						<smc:response>
							<smc:field name="procedureDefinitionId" comment="The Procedure Definition ID">
								<smc:type area="MAL" service="ProcedureExecution" name="Long" />
							</smc:field>
						</smc:response>
					</smc:messages>
				</smc:requestIP>
				<smc:submitIP name="updateDefinition" number="402"
					supportInReplay="false"
					comment="Updates Procedure Definition referenced by Procedure Identifier">
					<smc:messages>
						<smc:submit>
							<smc:field name="procedureDefinitionId" comment="The Procedure Definition ID">
								<smc:type area="MAL" service="ProcedureExecution" name="Long" />
							</smc:field>
							<smc:field name="procedureDefinition" comment="Procedure Definition">
								<smc:type area="Automation" service="ProcedureExecution"
									name="ProcedureDefinition" />
							</smc:field>
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
				<smc:submitIP name="removeDefinition" number="403"
					supportInReplay="false" comment="Removes Procedure Definition by ID">
					<smc:messages>
						<smc:submit>
							<smc:field name="procedureDefinitionId" comment="The Procedure Definition ID">
								<smc:type area="MAL" service="ProcedureExecution" name="Long" />
							</smc:field>
						</smc:submit>
					</smc:messages>
				</smc:submitIP>
			</smc:capabilitySet>
			<smc:capabilitySet number="5">
				<smc:pubsubIP name="monitorExecution" number="501"
					supportInReplay="false"
					comment="Subscribe to Procedure execution monitoring. Notifications are sent on Procedure status changes">
					<smc:messages>
						<smc:publishNotify>
							<smc:type area="MAL" service="ProcedureExecution" name="Long" />
							<smc:type area="Automation" service="ProcedureExecution"
								name="LevelOfDetail" />
						</smc:publishNotify>
					</smc:messages>
				</smc:pubsubIP>
			</smc:capabilitySet>
			<smc:dataTypes>
				<smc:composite name="ProcedureDefinition"
					shortFormPart="1"
					comment="This data structure defines a procedure definition composite">
					<smc:field name="name" comment="Name of procedure definition">
						<smc:type area="MAL" name="String" />
					</smc:field>
					<smc:field name="description" comment="Description of procedure definition">
						<smc:type area="MAL" name="String" />
					</smc:field>
					<smc:field name="arguments" comment="Procedure definition argument values">
						<smc:type list="true" area="Automation" name="ProcedureArgumentDefinition"
							service="ProcedureExecution" />
					</smc:field>
				</smc:composite>
				<smc:composite name="ProcedureArgumentDefinition"
					shortFormPart="2"
					comment="This data structure defines a schedule argument value composite">
					<smc:field name="name" comment="Name of schedule argument value">
						<smc:type area="MAL" name="String" />
					</smc:field>
					<smc:field name="valueType" comment="Procedure argument value type">
						<smc:type area="MAL" name="Octet" />
					</smc:field>
				</smc:composite>
				<smc:composite name="Procedure" shortFormPart="3"
					comment="This data structure defines a procedure composite">
					<mal:extends>
						<mal:type name="Composite" area="MAL" />
					</mal:extends>
					<smc:field name="name" comment="The name of the Procedure">
						<smc:type area="MAL" name="String" />
					</smc:field>
					<smc:field name="description" comment="The description of the Procedure">
						<smc:type area="MAL" name="String" />
					</smc:field>
					<smc:field name="arguments" comment="The argument types of a Procedure">
						<smc:type list="true" area="Automation" name="ProcedureArgumentValue"
							service="ProcedureExecution" />
					</smc:field>
					<smc:field name="attachments" comment="Attachments">
						<smc:type list="true" area="MAL" name="Blob"
							service="ProcedureExecution" />
					</smc:field>
					<smc:field name="status" comment="Procedure status">
						<smc:type area="Automation" name="ProcedureStatus"
							service="ProcedureExecution" />
					</smc:field>
				</smc:composite>
				<smc:composite name="ProcedureArgumentValue"
					shortFormPart="4" comment="The argument name">
					<smc:field name="name" comment="name">
						<smc:type area="MAL" name="String" />
					</smc:field>
					<smc:field name="value" comment="The argument value">
						<smc:type area="MAL" name="Attribute" />
					</smc:field>
					<smc:field name="status" comment="The procedure status">
						<smc:type area="Automation" name="ProcedureStatus"
							service="ProcedureExecution" />
					</smc:field>
				</smc:composite>
				<smc:composite name="ProcedureOccurrenceFilter"
					shortFormPart="5" comment="Procedure Occurrence Filter definition">
					<smc:field name="status" comment="procedure status">
						<smc:type area="Automation" service="ProcedureExecution"
							name="ProcedureStatus" />
					</smc:field>
					<!-- TODO -->
				</smc:composite>
				<smc:composite name="ProcedureInvocationDetails"
					shortFormPart="6" comment="Starts the Procedure execution">
					<smc:field name="values" comment="Values">
						<smc:type list="true" area="Automation" name="DetailValue"
							service="ProcedureExecution" />
					</smc:field>
					<!-- TODO -->
				</smc:composite>
				<smc:composite name="DetailValue" shortFormPart="7"
					comment="Describes detail value pair">
					<smc:field name="key" comment="Unique ID">
						<smc:type area="MAL" name="Long" />
					</smc:field>
					<smc:field name="value" comment="Value">
						<smc:type area="MAL" name="String" />
					</smc:field>
				</smc:composite>
				<smc:composite name="ProcedureStatus" shortFormPart="8"
					comment="This data structure defines a schedule status composite">
					<smc:field name="state" comment="state">
						<smc:type area="Automation" name="ProcedureState"
							service="ProcedureExecution" />
					</smc:field>
					<smc:field name="message" comment="message">
						<smc:type list="true" area="MAL" name="String" />
					</smc:field>
				</smc:composite>
				<smc:enumeration name="ProcedureState"
					shortFormPart="9">
					<smc:item value="RUNNING" nvalue="1" />
					<smc:item value="PAUSED" nvalue="2" />
					<smc:item value="HALTED" nvalue="3" />
					<smc:item value="ERROR" nvalue="4" />
					<smc:item value="ABORTED" nvalue="5" />
					<smc:item value="COMPLETED" nvalue="6" />
				</smc:enumeration>
				<smc:composite name="ProcedureExecutionEvent"
					shortFormPart="10"
					comment="This data structure defines a procedure execution event composite">
					<smc:field name="type" comment="Type of event">
						<smc:type area="Automation" service="ProcedureExecution"
							name="EventType" />
					</smc:field>
				</smc:composite>
				<smc:enumeration name="EventType" shortFormPart="11">
					<smc:item value="INSERT" nvalue="1" />
					<smc:item value="UPDATE" nvalue="2" />
					<smc:item value="DELETE" nvalue="3" />
				</smc:enumeration>
				<smc:enumeration name="LevelOfDetail" shortFormPart="12">
					<smc:item value="HIGH" nvalue="1" />
					<smc:item value="MEDIUM" nvalue="2" />
					<smc:item value="LOW" nvalue="3" />
					<smc:item value="NONE" nvalue="4" />
					<smc:item value="DEBUG" nvalue="5" />
					<smc:item value="STATEMENT" nvalue="6" />
				</smc:enumeration>
			</smc:dataTypes>
			<com:features>
				<com:objects
					comment="The definitions of the actions shall be represented as ActionDefinition COM objects.&#xA;Instances of an action that are submitted to a provider using the submitAction operation shall be represented as ActionInstance COM object.&#xA;The object instance identifier for an ActionInstance object shall be populated by the consumer.&#xA;The ActionInstance object shall use the related link to indicate which action definition object it uses.&#xA;The source link of the ActionDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object.&#xA;Instances of an action that are submitted to a provider using the submitAction operation shall link to the submitAction OperationActivity object using the source link.&#xA;&#xA;">
					<com:object name="ProcedureDefinition" number="1">
						<com:objectType>
							<mal:type name="ProcedureDefinition" service="ProcedureDefinition"
								area="Automation" />
						</com:objectType>
					</com:object>
					<com:object name="ProcedureOccurrence" number="2">
						<com:objectType>
							<mal:type name="Procedure" service="ProcedureExecution"
								area="Automation" />
						</com:objectType>
						<com:relatedObject>
							<com:objectType number="1" service="ProcedureExecution"
								area="Automation" />
						</com:relatedObject>
					</com:object>
				</com:objects>
				<com:archiveUsage
					comment="ActionDefinition objects should be stored in the COM archive.&#xA;When an action is sent with the submitAction operation, the ActionInstance object should be stored in the COM archive by the consumer.&#xA;" />
				<com:activityUsage
					comment="The COM Activity service may be used to monitor the transfer and execution of the submitAction operation.&#xA;The COM Activity service may be used to monitor the transfer and execution of action instances.&#xA;The COM activity events shall be generated as defined in the COM activity tracking service for the submitAction operation.&#xA;A Release activity event for the action instance shall be generated when an action is released from a consumer using the submitAction operation.&#xA;An Acceptance activity event for the action instance shall be generated when an action is received by the destination provider as part of the submitAction operation.&#xA;The source link of the activity events for the action instance shall be the ActionInstance object.&#xA;In all activity execution events for the action instance the ActivityExecution.stageCount field shall be set to 2 plus the total number of progress stages.&#xA;In the activity execution event, when notification of an action starting is requested, the ActivityExecution.executionStage field shall be set to 1.&#xA;In the activity execution event, when notification of an action progress is requested, the ActivityExecution.executionStage field shall be set to 1 plus the current progress stage. &#xA;In the activity execution event, when notification of an action completion is requested, the ActivityExecution.executionStage field shall be set to 2 plus the total number of progress stages.&#xA;&#xA;" />
			</com:features>
		</smc:service>
	</smc:area>
</smc:specification>
        