<?xml version="1.0" encoding="UTF-8"?>
<mal:specification xmlns:com="http://www.ccsds.org/schema/COMSchema"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:mal="http://www.ccsds.org/schema/ServiceSchema">
  <mal:area name="Planning" number="5" version="2"
            comment="This section details the planning services. Both the services and structures are defined in terms of the MO MAL, which is defined in Message Abstraction Layer, Recommended Standard (Blue Book), CCSDS 521.0-B-2, so it is possible to deploy them over any supported protocol and message transport.&#xA;The services defined here are also specified in terms of the COM, which is defined in Mission Operations Common Object Model, Recommended Standard (Blue Book), CCSDS 521.1-B-1.&#xA;All service specifications in this document are part of the Planning area, which has a short form number of '5'.">
    <mal:service xsi:type="com:ExtendedServiceType" name="PlanningRequest" number="1"
                 comment="The planning request service allows consumers to submit planning requests to the planning system and to subsequently monitor the status changes of the submitted planning requests.
				 &#xA;Planning request contains tasks. Task is a higher level construct to express what needs to be done. The planning request and task definitions are managed using the operations in the planning request service. The planning request definition specifies the types of task definitions that it is allowed to contain. The submitted planning request contains task instances.
				 &#xA;A planning request is submitted to the provider using the submitPlanningRequest operation, the progress of which may optionally be monitored using the COM activity tracking pattern, which completes when the planning request has been delivered to the provider. The use of the COM activity tracking pattern is deployment specific. The usage pattern of the COM activity tracking is similar to the submitAction operation in the M&amp;C Action service.
				 &#xA;The submitPlanningRequest operation takes the object instance identifier of the submitted planning request. This is required for the potential use of the COM activity tracking service, in order to populate the source fields of the activity tracking events. Coordination may be required between planning request service consumers to ensure the planning request object instance identifiers are unique. How this is done is outside the scope of this specification however a good approach is the use of a central COM archive as that can provide the unique instance identifiers.
				 &#xA;The consumer is responsible for creating and archiving the planning request instance object and then using the submitPlanningRequest operation to submit it to the planning request service provider. 
				 &#xA;The planning request and task statuses consist of a set of fields. The fields are related to planning request and task life cycle states (submitted, planned, etc). The planning request and task life cycles are not part of the specification.
				 &#xA;Consumer may subscribe to the monitoring of planning request and task instances. The notifications contain the planning request and task status objects.">
      <mal:documentation name="High Level Requirements" order="1">The planning request service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for submitting planning requests;&lt;/li&gt;
 &lt;li&gt;the capability for getting, updating and removing already submitted planning requests;&lt;/li&gt;
 &lt;li&gt;the capability for aggregating tasks within a planning request;&lt;/li&gt;
 &lt;li&gt;the capability for getting a planning request and task statuses;&lt;/li&gt;
 &lt;li&gt;the capability for monitoring planning request and task statuses;&lt;/li&gt;
 &lt;li&gt;the capability for defining a new planning request and task definition;&lt;/li&gt;
 &lt;li&gt;the capability for updating an existing planning request and task definition;&lt;/li&gt;
 &lt;li&gt;the capability for removing an existing planning request and task definition.&lt;/li&gt;
&lt;/ol&gt;
        The list of planning request types and task types that are supported by the planning request service shall be declared when deploying that service.
        Each planning request submission shall include:
&lt;ol&gt;
 &lt;li&gt;the planning request definition numeric identifier;&lt;/li&gt;
 &lt;li&gt;the planning request instance numeric identifier;&lt;/li&gt;
 &lt;li&gt;the planning request instance object.&lt;/li&gt;
&lt;/ol&gt;
        The planning request service may use the COM Activity Tracking service to report the delivery of a submitted planning request.
        The submitPlanningRequest operation shall be used to submit a planning request.
      </mal:documentation>
      <mal:capabilitySet number="1" comment="Submit and get planning request instance.">
		<!-- submitPlanningRequest -->
        <mal:requestIP name="submitPlanningRequest" number="1" supportInReplay="false"
                      comment="The submitPlanningRequest operation allows a consumer to submit a planning request to a provider.">
          <mal:messages>
            <mal:request>
              <mal:field name="prDetails"
                         comment="The prDetails part of the submission shall contain the information of the planning request instance.&#xA;The operation shall return once the planning request has been accepted by the provider.">
                <mal:type list="true" name="PlanningRequestInstanceDetails" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="prStatus"
                         comment="The operation shall return a PlanningRequestStatusDetails object. The status object contains the ids of the submitted planning requests. Errors are returned using the ERROR states in the status object (may use multiple ERROR states).">
                <mal:type list="true" name="PlanningRequestStatusDetails" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
		<!-- getPlanningRequest -->
        <mal:requestIP name="getPlanningRequest" number="2" supportInReplay="false"
                      comment="The getPlanningRequest operation allows a consumer to get a planning request instance from the provider. The planning request instance may have been modified after the initial submission, and contains the current data, and not neccessarily the data that was initially submitted.">
          <mal:messages>
            <mal:request>
              <mal:field name="prInstId"
                         comment="The prInstId field of the submission shall contain a MAL::Long that is the object instance identifier of the PlanningRequestInstance that is going to be returned.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="prDetails"
                         comment="The operation shall return PlanningRequestInstanceDetails objects.">
                <mal:type list="true" name="PlanningRequestInstanceDetails" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Submitted planning request instance ID does not exist.">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="The extra information field contains a list of error messages, one per error.">
                <mal:type list="true" name="String" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2" comment="Update and remove planning request instance.">
		<!-- updatePlanningRequest -->
        <mal:requestIP name="updatePlanningRequest" number="3" supportInReplay="false"
                      comment="The updatePlanningRequest operation allows a consumer to update an already submitted planning request by essentially replacing the existing planning request with the provided planning request. The primary goal of this operation is to support the approach of long, medium and short term planning where some details of the planning request only become clear as the execution phase comes closer. The difference between this operation and calling removePlanningRequest() + submitPlanningRequest() is that in the latter case the Identifier will change. Also, when removePlanningRequest() is executed the provider does not know that the intention is to actually update the request and may take wrong actions. There are no methods to update individual properties of a planning request for the interface stability reasons.">
          <mal:messages>
            <mal:request>
              <mal:field name="prDetails"
                         comment="The prDetails part of the submission shall contain the information of the updated planning request instance. The prDetails instance will become the planning request instance on the provider referenced by prInstId.&#xA;The operation shall return once the planning request has been accepted by the provider.">
                <mal:type list="true" name="PlanningRequestInstanceDetails" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="prStatus"
                         comment="The operation shall return a PlanningRequestStatusDetails object">
                <mal:type list="true" name="PlanningRequestStatusDetails" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Planning request or task definition is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="The extra information field contains a list of error messages, one per error.">
                <mal:type list="true" name="String" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="Planning request or task instance does not exist or contains invalid data.">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of error messages, one per error.">
                <mal:type list="true" name="String" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
		<!-- removePlanningRequest -->
        <mal:requestIP name="removePlanningRequest" number="4" supportInReplay="false"
                      comment="The removePlanningRequest operation allows a consumer to remove an already submitted planning request. NB! This operations removes all tasks that are part of the planning request.">
          <mal:messages>
            <mal:request>
              <mal:field name="prInstId"
                         comment="The prInstId field of the submission shall contain a MAL::Long that is the object instance identifier of the PlanningRequestInstance that is going to be removed.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="prStatus"
                         comment="The operation shall return a PlanningRequestStatusDetails object">
                <mal:type list="true" name="PlanningRequestStatusDetails" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
     <mal:capabilitySet number="3" comment="Get planning request status.">
		<!-- getPlanningRequestStatus -->
        <mal:requestIP name="getPlanningRequestStatus" number="5" supportInReplay="true"
                       comment="The getPlanningRequestStatus operation allows a consumer to get a planning request status.">
          <mal:messages>
            <mal:request>
              <mal:field name="prIds"
                         comment="The prIds field shall contain a list of planning request ids to retrieve the planning request statuses for.&#xA;The request may contain the wildcard value of '*' to return statuses for all submitted planning requests.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="prStatus"
                         comment="The operation shall return PlanningRequestStatusDetails objects. The order of the planning request status objects corresponds to the order of the submitted planning request instance ids. If a planning request instance id does not exist, then the corresponding planning request status object is null.">
                <mal:type list="true" name="PlanningRequestStatusDetails" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
	 </mal:capabilitySet>
     <mal:capabilitySet number="4" comment="Monitor changes planning requests and tasks.">
	<!-- monitorPlanningRequests -->
		<mal:pubsubIP name="monitorPlanningRequests" number="6" supportInReplay="true"
                      comment="The monitorPlanningRequests operation allows a consumer to subscribe for planning request and task status updates.&#xA;How to specify the planning request ids that we wish to monitor? This problem is not solved in this specification. The problem is similar to the MC Parameter service. In MC Parameter service there is a general monitorValue operation, that takes no arguments. A related enableGeneration operation specifies the instance ids or groups of instances for which the updates are generated. Alternatively, there is a generationEnabled field in ParameterDefinitionDetails.&#xA;The notifications contain the planning request status objects. The amount of information in the status objects is defined by deployments. For example, some system may send the current state constant of a planning request (eg PLANNED), others may send multiple constants with associated time-stamps (eg SUBMITTED, LAST_MODIFIED, PLANNED).">
          <mal:messages>
            <mal:publishNotify>
              <mal:field name="objId"
                         comment="The MAL EntityKey.firstSubKey shall contain the planning request name.&#xA;The MAL EntityKey.secondSubKey shall contain the PlanningRequestDefinition object instance identifier.&#xA;The MAL EntityKey.thirdSubKey shall contain the PlanningRequestInstance object instance identifier.&#xA;The MAL EntityKey.fourthSubKey shall be NULL.&#xA;The timestamp of the PlanningRequestInstance update shall be taken from the publish message.&#xA;The publish message shall include the ObjectId of the source link of the update.&#xA;If no source link is needed then the ObjectId shall be replaced with a NULL.">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
              <mal:field name="status"
                         comment="The second part of the publish message shall be the PlanningRequestInstance object value.">
                <mal:type name="PlanningRequestStatusDetails" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:publishNotify>
          </mal:messages>
        </mal:pubsubIP>
	</mal:capabilitySet>
    <mal:capabilitySet number="5" comment="List planning request definition.">
		<!-- listDefinition -->
        <mal:requestIP name="listDefinition" number="7" supportInReplay="true"
                       comment="The listDefinition operation allows a consumer to request the object instance ids of specific Definition objects (eg PlanningRequestDefinition, TaskDefinition) for the supported types of planning request, tasks, etc of the provider. The operation is expected to be used in conjunction with the COM archive which holds the actual PlanningRequestDefinition, TaskDefinition objects. If the planning request name does not exist the corresponding definition id is not returned and no error is reported.">
          <mal:messages>
            <mal:request>
              <mal:field name="defType"
                         comment="Type of definitions, eg planning request definition, task definition, etc. NB! The operation works for exactly one type of definitions. It is not possible to list both planning request and task definitions in one operation call.">
                <mal:type name="DefinitionType" service="PlanningRequest" area="Planning"/>
              </mal:field>
              <mal:field name="prNames"
                         comment="The prNames field shall contain a list of planning request definition names to retrieve the PlanningRequestDefinition object instance identifiers for.&#xA;The request may contain the wildcard value of '*' to return all supported PlanningRequestDefinition objects.">
                <mal:type list="true" name="Identifier" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="prDefInstIds"
                         comment="The response shall contain a list of matching PlanningRequestDefinition object instance ids.&#xA;The returned list shall maintain the same order as the submitted list unless the wildcard value was included in the request.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
		<!-- getDefinition -->
        <mal:requestIP name="getDefinition" number="8" supportInReplay="true"
                       comment="The getDefinition operation allows a consumer to request the definition objects of specific Definition types (eg PlanningRequestDefinition, TaskDefinition) for the supported types of planning request or tasks on the provider. If the id does not exist the corresponding definition object is not returned and no error is reported.">
          <mal:messages>
            <mal:request>
              <mal:field name="defType" canBeNull="false"
                         comment="Type of definitions, eg planning request definition, task definition. NB! The operation works for exactly one type of definitions. It is not possible to list both planning request and task definitions in one operation call.">
                <mal:type name="DefinitionType" service="PlanningRequest" area="Planning"/>
              </mal:field>
              <mal:field name="defInstIds" canBeNull="true"
                         comment="The defInstIds field shall contain a list of planning request definition or task definition ids.&#xA;If null then returns all definitions of the specified defType (planning request, task).">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="prDefInst"
                         comment="The response shall contain a list of matching PlanningRequestDefinition or TaskDefinition object instances.&#xA;The returned list shall maintain the same order as the submitted list unless defIds=null in the request.">
                <mal:type list="true" name="BaseDefinition" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="6" comment="Add, update, remove planning request definition.">
		<!-- addDefinition -->
        <mal:requestIP name="addDefinition" number="9" supportInReplay="false"
                       comment="The addDefinition operation allows a consumer to define one or more planning request or task types that do not currently exist. The new PlanningRequestDefinition or TaskDefinition object is expected to be stored in the COM archive by the provider of the planning request service.">
          <mal:messages>
            <mal:request>
              <mal:field name="defType"
                         comment="Type of definitions, eg planning request definition, task definition, etc. NB! The operation works for exactly one type of definitions. It is not possible to add both planning request and task definitions in one operation call.">
                <mal:type name="DefinitionType" service="PlanningRequest" area="Planning"/>
              </mal:field>
              <mal:field name="prDefDetails"
                         comment="The prDefDetails field shall hold the list of definitions to be added.&#xA;The name field of the supplied PlanningRequestDefinitionDetails structures must not be NULL, the wildcard '*', or empty (an INVALID error shall be returned in this case).&#xA;The supplied name must be unique among all PlanningRequestDefinition objects for the domain of the provider otherwise a DUPLICATE error shall be raised.&#xA;If an error is raised then no new definitions shall be added as a result of this operation call.">
                <mal:type list="true" name="BaseDefinition" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="defInstIds"
                         comment="The response shall contain the list of object instance ids for the new definitions.&#xA;The returned list shall maintain the same order as the submitted definitions.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied definitions contains an invalid planning request name.">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of erroneous ids from the originating list supplied.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One or more of the planning request definitions being added has supplied a planning request name or id that is already in use in the domain.">
              <mal:type name="DUPLICATE" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of erroneous ids from the originating list supplied.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
		<!-- updateDefinition -->
        <mal:submitIP name="updateDefinition" number="10" supportInReplay="false"
                      comment="The updateDefinition operation allows a consumer to modify a definition for one or more planning requests or tasks without needing to delete the existing definition first.&#xA;This differs from deleting an existing definition and adding a new definition with the same name in the fact that the object instance identifier of the definition being modified is not changed therefore the operation is only expected to be used for minor modifications such as descriptions.&#xA;The operation must not be used to change the name of an existing definition, removal of the existing definition and adding the new definition must be used in this case.&#xA;The replacement definition should be stored in the COM archive by the service provider.">
          <mal:messages>
            <mal:submit>
              <mal:field name="defType"
                         comment="Type of definitions, eg planning request definition, task definition, etc. NB! The operation works for exactly one type of definitions. It is not possible to update both planning request and task definitions in one operation call.">
                <mal:type name="DefinitionType" service="PlanningRequest" area="Planning"/>
              </mal:field>
              <mal:field name="defDetails"
                         comment="The defDetails field shall contain the list of replacement details for the matched definition objects. The id of definition is in defDetails.&#xA;Only the description or the unit fields of the arguments shall be permitted to be changed. Any other modification shall cause an INVALID error to be returned.&#xA;If an error is raised then no definitions shall be modified as a result of this operation call.">
                <mal:type list="true" name="BaseDefinition" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied definitions is trying to change its definition name or id.">
              <mal:type name="INVALID" area="COM"/>
              <mal:extraInformation comment="The extra information field contains a list of erroneous ids from the originating list supplied.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="One of the supplied definition object instance ids is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="The extra information field contains a list of erroneous ids from the originating list supplied.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
		<!-- removeDefinition -->
        <mal:submitIP name="removeDefinition" number="11" supportInReplay="false"
                      comment="The removeDefinition operation allows a consumer to remove one or more definitions from the list of plannig request or task types supported by the planning request provider.&#xA;The operation does not remove the PlanningRequestDefinition or TaskDefinition object from the COM archive, merely removes the object from the provider. This permits active, and completed, PlanningRequestInstance or TaskInstance objects to continue to reference the correct Definition object in the COM archive.">
          <mal:messages>
            <mal:submit>
              <mal:field name="defType"
                         comment="Type of definitions, eg planning request definition, task definition, etc. NB! The operation works for exactly one type of definitions. It is not possible to remove both planning request and task definitions in one operation call.">
                <mal:type name="DefinitionType" service="PlanningRequest" area="Planning"/>
              </mal:field>
              <mal:field name="defInstIds"
                         comment="The defInstIds field holds the list of PlanningRequestDefinition or TaskDefinition object instance ids of the definitions to be removed from the provider.&#xA;The wildcard value of '0' in the list of object instance identifiers shall be supported and matches all definitions of the provider.&#xA;If a provided definition object instance identifier does not include a wildcard and does not match an existing definition then this operation shall fail with an UNKNOWN error.&#xA;If a matched definition is still being used by an active planning request instance then this operation shall not fail because of this reason.&#xA;Removed definitions still exist in the COM archive but shall not be allowed to be referenced by new planning request or task instances.&#xA;If an error is raised then no definitions shall be removed as a result of this operation call.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One of the supplied definition object instance ids is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
              <mal:extraInformation comment="The extra information field contains a list of erroneous ids from the originating list supplied.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
		<mal:capabilitySet number="7" comment="Get task status.">
		<!-- getTaskStatus -->
        <mal:requestIP name="getTaskStatus" number="12" supportInReplay="true"
                       comment="The getTaskStatus operation allows a consumer to get a task status.">
          <mal:messages>
            <mal:request>
              <mal:field name="taskIds"
                         comment="The taskIds field shall contain a list of task ids to retrieve the task statuses for.&#xA;The request may contain the wildcard value of '*' to return statuses for all submitted tasks.">
                <mal:type list="true" name="Long" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="taskStatus"
                         comment="The operation shall return TaskStatusDetails objects. The order of the task status objects corresponds to the order of the submitted task instance ids. If a task instance id does not exist, then the corresponding task status object is null.">
                <mal:type list="true" name="TaskStatusDetails" service="PlanningRequest" area="Planning"/>
              </mal:field>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
		</mal:capabilitySet>
		<!-- data types-->
      <mal:dataTypes>
      	  <!-- DefinitionType -->
	      <mal:enumeration name="DefinitionType" shortFormPart="9"
	                       comment="Constants for the possible definition objects in the planning request service.">
	        <mal:item value="PLANNING_REQUEST_DEF" nvalue="1"
	                  comment="PlanningRequestDefinition"/>
	        <mal:item value="TASK_DEF" nvalue="2"
	                  comment="TaskDefinition"/>
	      </mal:enumeration>
		<!-- BaseDefinition -->
        <mal:composite name="BaseDefinition"
                       comment="Abstract Definition, to be used in addDefinition and updateDefinition operation signatures. The actual calls of the operations use PlanningRequestDefinition or any other extensions of BaseDefinition.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
        </mal:composite>
		<!-- PlanningRequestDefinitionDetails -->
        <mal:composite name="PlanningRequestDefinitionDetails" shortFormPart="1"
                       comment="The PlanningRequestDefinitionDetails structure holds the definition information of a planning request.">
          <mal:extends>
            <mal:type name="BaseDefinition" service="PlanningRequest" area="Planning"/>
          </mal:extends>
          <mal:field name="id" canBeNull="true"
                     comment="The unique id of the planning request definition. This id is also used by the COM Archive. The id may be null in the initial submission, in case the provider populates the id field.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="name" canBeNull="false"
                     comment="The unique name of the planning request definition instance. Must not be empty or the wildcard value.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="description" canBeNull="false"
					comment="The description of the planning request definition.">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="argumentDefs" canBeNull="true"
                     comment="Definitions of planning request arguments. Arguments are mission-specific.">
            <mal:type list="true" name="ArgumentDefinitionDetails" area="PlanningDataTypes"/>
          </mal:field>
          <mal:field name="taskDefIds" canBeNull="true"
                     comment="The Ids of the permitted task definitions for this planning request.">
            <mal:type list="true" name="Long" area="MAL"/>
          </mal:field>
        </mal:composite>
		<!-- TaskDefinitionDetails -->
        <mal:composite name="TaskDefinitionDetails" shortFormPart="2"
                       comment="The TaskDefinitionDetails structure holds the definition information of a task.">
          <mal:extends>
            <mal:type name="BaseDefinition" service="PlanningRequest" area="Planning"/>
          </mal:extends>
          <mal:field name="id" canBeNull="true"
                     comment="The unique id of the task definition. This id is also used by the COM Archive. The id may be null in the initial submission, in case the provider populates the id field.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="name" canBeNull="false"
                     comment="The unique name of the task definition instance. Must not be empty or the wildcard value.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="description" canBeNull="false"
					comment="The description of the task definition.">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="argumentDefs" canBeNull="true"
                     comment="Definitions of task arguments. Arguments are mission-specific.">
            <mal:type list="true" name="ArgumentDefinitionDetails" area="PlanningDataTypes"/>
          </mal:field>
        </mal:composite>
		<!-- PlanningRequestInstanceDetails -->
        <mal:composite name="PlanningRequestInstanceDetails" shortFormPart="3"
                       comment="The PlanningRequestInstanceDetails structure holds the information required for an instance of a planning request such as the argument values to use.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="id" canBeNull="true"
                     comment="The unique id of the planning request instance. This id is also used by the COM Archive and the optional Activity Tracking service. The id may be null in the initial submission, in case the provider populates the id field.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="prDefId" canBeNull="false"
                     comment="Reference to the planning request definition.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="comment" canBeNull="true"
					comment="Comment for the planning request instance.">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="argumentValues" canBeNull="true"
                     comment="The planning request argument values.">
            <mal:type list="true" name="ArgumentValue" area="PlanningDataTypes"/>
          </mal:field>
          <mal:field name="timingConstraints" canBeNull="true"
                     comment="Planning request synchronization constraints, such as planning request validity window. The synchronization constraints are time or event based, where events are defined by implementations.">
            <mal:type list="true" name="TimingDetails" area="PlanningDataTypes"/>
          </mal:field>
          
          <mal:field name="tasks" canBeNull="true"
                     comment="Task objects associated with the planning request submission.">
            <mal:type list="true" name="TaskInstanceDetails" service="PlanningRequest" area="Planning"/>
          </mal:field>
        </mal:composite>
		<!-- TaskInstanceDetails -->
        <mal:composite name="TaskInstanceDetails" shortFormPart="4"
                       comment="The TaskInstanceDetails structure holds the information required for an instance of a task such as the argument values to use.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="id" canBeNull="true"
                     comment="The unique id of the task instance. This id is also used by the COM Archive. The id may be null in the initial submission, in case the provider populates the id field.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="taskDefId" canBeNull="false"
                     comment="Reference to the task definition.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="prInstId" canBeNull="true"
                     comment="Reference to the enclosing planning request instance.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="comment" canBeNull="true"
					comment="Comment for the task instance.">
            <mal:type name="String" area="MAL"/>
          </mal:field>
          <mal:field name="argumentValues" canBeNull="true"
                     comment="The task argument values.">
            <mal:type list="true" name="ArgumentValue" area="PlanningDataTypes"/>
          </mal:field>
          <mal:field name="timingConstraints" canBeNull="true"
                     comment="Task synchronization constraints, such as start time. The synchronization constraints are time or event based, where events are defined by implementations.">
            <mal:type list="true" name="TimingDetails" area="PlanningDataTypes"/>
          </mal:field>
        </mal:composite>
		<!-- PlanningRequestStatusDetails -->
        <mal:composite name="PlanningRequestStatusDetails" shortFormPart="5"
                       comment="The PlanningRequestStatusDetails structure holds the information related to the planning request status. The planning request status consists of as set of fields, related to a typical planning request life cycle. The planning request life cycle is not part of the standard.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="prInstId" canBeNull="false"
                     comment="Reference to the planning request instance associated with this planning request status.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="status" canBeNull="true"
                     comment="Contains the planning request status details objects, eg PLANNED, SCHEDULED.">
            <mal:type list="true" name="StatusRecord" area="PlanningDataTypes"/>
          </mal:field>
          <mal:field name="taskStatuses" canBeNull="true"
                     comment="Contains the task status details objects of changed tasks.">
            <mal:type list="true" name="TaskStatusDetails" service="PlanningRequest" area="Planning"/>
          </mal:field>
        </mal:composite>
		<!-- TaskStatusDetails -->
        <mal:composite name="TaskStatusDetails" shortFormPart="6"
                       comment="The TaskStatusDetails structure holds the information related to the task status. The task status consists of as set of fields, related to a typical task life cycle. The task life cycle is not part of the standard.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="taskInstId" canBeNull="false"
                     comment="Reference to the task instance associated with this task status.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="status" canBeNull="true"
                     comment="Contains the task status details objects, eg PLANNED, SCHEDULED.">
            <mal:type list="true" name="StatusRecord" area="PlanningDataTypes"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
		<!-- features-->
      <com:features>
        <com:objects comment="The definitions of the planning requests shall be represented as PlanningRequestDefinition COM objects.&#xA;The source link of the PlanningRequestDefinition object should be the object that caused it to be created, most likely a COM OperationActivity object or an operator login in the case of off-line editors being used.&#xA;Instances of a planning request that are submitted to a provider using the submitPlanningRequest operation shall be represented as PlanningRequestInstance COM object.&#xA;The object instance identifier for a PlanningRequestInstance object shall be populated by the consumer.&#xA;The PlanningRequestInstance object shall use the related link to indicate which PlanningRequestDefinition object it uses.&#xA;Instances of a planningRequest that are submitted to a provider using the submitPlanningRequest operation shall link to the submitPlanningRequest OperationActivity object using the source link.&#xA;The source link of the submitPlanningRequest OperationActivity object should be the object that caused it to be created, most likely an operator login or an automated script.">
          <com:object name="PlanningRequestDefinition" number="1">
            <com:objectType>
              <mal:type name="PlanningRequestDefinitionDetails" service="PlanningRequest" area="Planning"/>
            </com:objectType>
          </com:object>
          <com:object name="PlanningRequestInstance" number="2">
            <com:objectType>
              <mal:type name="PlanningRequestInstanceDetails" service="PlanningRequest" area="Planning"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="PlanningRequest" area="Planning"/>
            </com:relatedObject>
          </com:object>
          <com:object name="PlanningRequestStatus" number="3">
            <com:objectType>
              <mal:type name="PlanningRequestStatusDetails" service="PlanningRequest" area="Planning"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="2" service="PlanningRequest" area="Planning"/>
            </com:relatedObject>
          </com:object>
          <com:object name="TaskDefinition" number="4">
            <com:objectType>
              <mal:type name="TaskDefinitionDetails" service="PlanningRequest" area="Planning"/>
            </com:objectType>
          </com:object>
          <com:object name="TaskInstance" number="5">
            <com:objectType>
              <mal:type name="TaskInstanceDetails" service="PlanningRequest" area="Planning"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="4" service="PlanningRequest" area="Planning"/>
            </com:relatedObject>
          </com:object>
          <com:object name="TaskStatus" number="6">
            <com:objectType>
              <mal:type name="TaskStatusDetails" service="PlanningRequest" area="Planning"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="5" service="PlanningRequest" area="Planning"/>
            </com:relatedObject>
          </com:object>
		  </com:objects>
		  <com:events comment="The use of the COM event service is not foreseen in the draft specification of the planning request service.">
        </com:events>
        <com:archiveUsage comment="PlanningRequestDefinition and TaskDefinition objects should be stored in the COM archive by the service provider.&#xA;When a planning request is sent with the submitPlanningRequest operation, the PlanningRequestInstance and the contained TaskInstance objects should be stored in the COM archive by the consumer.&#xA;PlanningRequestStatus and TaskStatus objects should be stored in the COM archive by the consumer."/>
        <com:activityUsage comment="The COM Activity service usage is optional.&#xA;The COM Activity service can be used to monitor the transfer of the submitPlanningRequest operation.&#xA;The COM Activity service can be used to monitor the transfer of PlanningRequestInstance objects."/>
      </com:features>
    </mal:service>
  </mal:area>
</mal:specification>